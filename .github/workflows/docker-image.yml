name: Build and Push Docker Image to Aliyun

on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - '**/*.py'       # 可按你项目语言/目录调整
      - '**/*.go'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.java'
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.sh'
      - '**/*.conf'
      - '**/*.env'
      - '**/*.json'
      - '**/*.html'
      - '**/*.css'
      - '**/*.md'
      - '**/*.txt'
  workflow_dispatch:

env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"
  IMAGE_NAME: "ipcheck"  # 镜像名
  IMAGE_TAG: "latest"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Check Disk Space Before Build
      run: df -hT

    - name: Maximize Build Space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 128
        remove-dotnet: 'true'
        remove-haskell: 'true'
        build-mount-path: '/var/lib/docker/'

    - name: Restart Docker
      run: sudo service docker restart

    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Aliyun Registry
      run: |
        echo "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}" | docker login --username "${{ secrets.ALIYUN_REGISTRY_USER }}" --password-stdin $ALIYUN_REGISTRY

    - name: Build Docker Image
      run: |
        docker build -t $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$IMAGE_NAME:$IMAGE_TAG .

    - name: Push Docker Image to Aliyun
      run: |
        docker push $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$IMAGE_NAME:$IMAGE_TAG

    - name: Clean Up Local Images
      run: |
        docker rmi $ALIYUN_REGISTRY/$ALIYUN_NAME_SPACE/$IMAGE_NAME:$IMAGE_TAG || true

    - name: Check Disk Space After Build
      run: df -hT
